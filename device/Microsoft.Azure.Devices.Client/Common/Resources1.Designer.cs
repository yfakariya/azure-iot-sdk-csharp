//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.Devices.Client.PCL.Common {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Azure.Devices.Client.PCL.Common.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   The ActionItem was scheduled for execution but has not completed yet. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ActionItemIsAlreadyScheduled {
            get {
                return ResourceManager.GetString("ActionItemIsAlreadyScheduled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The value of this argument must be non-negative. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ArgumentMustBeNonNegative {
            get {
                return ResourceManager.GetString("ArgumentMustBeNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The value of this argument must be positive. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ArgumentMustBePositive {
            get {
                return ResourceManager.GetString("ArgumentMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The argument {0} is null or empty. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ArgumentNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The argument {0} is null or white space. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ArgumentNullOrWhiteSpace {
            get {
                return ResourceManager.GetString("ArgumentNullOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The value supplied must be between {0} and {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ArgumentOutOfRange {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An AsyncCallback threw an exception. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string AsyncCallbackThrewException {
            get {
                return ResourceManager.GetString("AsyncCallbackThrewException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   End cannot be called twice on the same AsyncResult. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string AsyncResultAlreadyEnded {
            get {
                return ResourceManager.GetString("AsyncResultAlreadyEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The IAsyncResult implementation &apos;{0}&apos; tried to complete a single operation multiple times. This could be caused by an incorrect application of IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values, or invokes the AsyncCallback multiple times. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string AsyncResultCompletedTwice {
            get {
                return ResourceManager.GetString("AsyncResultCompletedTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An exception was thrown from a TransactionScope used to flow a transaction into an asynchronous operation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string AsyncTransactionException {
            get {
                return ResourceManager.GetString("AsyncTransactionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to allocate a managed memory buffer of {0} bytes. The amount of available memory may be low. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string BufferAllocationFailed {
            get {
                return ResourceManager.GetString("BufferAllocationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The buffer has already been reclaimed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string BufferAlreadyReclaimed {
            get {
                return ResourceManager.GetString("BufferAlreadyReclaimed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This buffer cannot be returned to the buffer manager because it is the wrong size. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string BufferIsNotRightSizeForBufferManager {
            get {
                return ResourceManager.GetString("BufferIsNotRightSizeForBufferManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An unrecoverable error occurred. For diagnostic purposes, this English message is associated with the failure: &apos;{0}&apos;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FailFastMessage {
            get {
                return ResourceManager.GetString("FailFastMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The AsyncResult object used to end this operation was not the object that was returned when the operation was initiated. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidAsyncResult {
            get {
                return ResourceManager.GetString("InvalidAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidAsyncResultImplementation {
            get {
                return ResourceManager.GetString("InvalidAsyncResultImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidAsyncResultImplementationGeneric {
            get {
                return ResourceManager.GetString("InvalidAsyncResultImplementationGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The buffer size is invalid. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidBufferSize {
            get {
                return ResourceManager.GetString("InvalidBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A null value was returned from an asynchronous &apos;Begin&apos; method or passed to an AsyncCallback. Asynchronous &apos;Begin&apos; implementations must return a non-null IAsyncResult and pass the same IAsyncResult object as the parameter to the AsyncCallback. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidNullAsyncResult {
            get {
                return ResourceManager.GetString("InvalidNullAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Object synchronization method was called from an unsynchronized block of code. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidSemaphoreExit {
            get {
                return ResourceManager.GetString("InvalidSemaphoreExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   IOThreadTimer cannot accept Timespan.MaxValue. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string IOThreadTimerCannotAcceptMaxTimeSpan {
            get {
                return ResourceManager.GetString("IOThreadTimerCannotAcceptMaxTimeSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This object is read-only and cannot be modified. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ObjectIsReadOnly {
            get {
                return ResourceManager.GetString("ObjectIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified offset exceeds the buffer size ({0} bytes). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string OffsetExceedsBufferSize {
            get {
                return ResourceManager.GetString("OffsetExceedsBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Operation timeout expired. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string OperationTimeoutExpired {
            get {
                return ResourceManager.GetString("OperationTimeoutExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ShipAssertExceptionMessage {
            get {
                return ResourceManager.GetString("ShipAssertExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified size exceeds the remaining buffer space ({0} bytes). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SizeExceedsRemainingBufferSpace {
            get {
                return ResourceManager.GetString("SizeExceedsRemainingBufferSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &apos;{0}&apos; is not a valid Base64 encoded string. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StringIsNotBase64 {
            get {
                return ResourceManager.GetString("StringIsNotBase64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Argument {0} must be a non-negative timeout value. The provided value was {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TimeoutMustBeNonNegative {
            get {
                return ResourceManager.GetString("TimeoutMustBeNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Argument {0} must be a positive timeout value. The provided value was {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TimeoutMustBePositive {
            get {
                return ResourceManager.GetString("TimeoutMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} If you contact a support representative please include this correlation identifier: {1}, timestamp: {2:u}, errorcode: DG{3}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string UserErrorFormat {
            get {
                return ResourceManager.GetString("UserErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The value of this argument must be non-negative. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ValueMustBeNonNegative {
            get {
                return ResourceManager.GetString("ValueMustBeNonNegative", resourceCulture);
            }
        }
    }
}
